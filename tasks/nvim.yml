---
- name: Deletes ~/.config/nvim
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim"
    state: absent
  tags: nvim

- name: Deletes lazy.vim share folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/share/nvim/lazy"
    state: absent
  tags: nvim

- name: Deletes lazy.vim state folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/state/nvim/lazy"
    state: absent
  tags: nvim

- name: Deletes nvim cache folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.cache/nvim"
    state: absent
  tags: nvim

- name: Install neovim requirements
  package:
    name:
      - ripgrep
      - fd-find
      - luarocks
  tags: nvim

- name: Install more neovim requirements for Ubuntu
  apt:
    name:
      - build-essential
      - libssl-dev
      - ninja-build
      - gettext
      - cmake
      - unzip
      - curl
      - lua5.4
  tags: nvim
  when: ansible_pkg_mgr == 'apt'

- name: Install more neovim requirements for Fedora
  dnf:
    name:
      - gcc
      - gcc-c++
      - lua
  tags: nvim
  when: ansible_pkg_mgr == 'dnf'

# - name: Remove keymaps.lua file
#   ansible.builtin.file:
#     path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/config/keymaps.lua"
#     state: absent
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

# - name: Symlink init.lua
#   ansible.builtin.shell: ln -s $HOME/dotfiles/init.lua $HOME/.config/nvim/init.lua
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

# - name: Symlink after folder
#   ansible.builtin.shell: ln -s $HOME/dotfiles/after $HOME/.config/nvim/after
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

# - name: Symlink lua folder
#   ansible.builtin.shell: ln -s $HOME/dotfiles/lua $HOME/.config/nvim/lua
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

- name: Install neovim package for Fedora
  package:
    name:
      - neovim
  tags: nvim
  when: ansible_pkg_mgr == 'dnf'

- name: Remove .config/nvim folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim"
    state: absent
  tags: nvim

- name: Create .config/nvim folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim"
    state: directory
    recurse: true
    mode: 0775
  tags: nvim

- name: Clone neovim from source for Debian-based distro
  ansible.builtin.git:
    repo: 'https://github.com/neovim/neovim'
    dest: "{{ lookup('env', 'HOME') }}/neovim"
    version: stable
  tags:
    - nvim
  when: ansible_pkg_mgr == 'apt'

- name: Build neovim for Debian-based distro
  shell: "cd {{ lookup('env', 'HOME') }}/neovim && make -j 20"
  tags:
    - install
    - nvim
  when: ansible_pkg_mgr == 'apt'

- name: Install neovim for Debian-based distro
  become: true
  shell: "cd {{ lookup('env', 'HOME') }}/neovim && make install"
  tags:
    - install
    - nvim
  when: ansible_pkg_mgr == 'apt'

- name: Git clone LazyVim starter
  ansible.builtin.git:
    repo: 'https://github.com/LazyVim/starter'
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim"
  tags: nvim

- name: Remove LazyVim's .git folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/.git"
    state: absent
  tags: nvim

- name: Remove config/keymaps.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/config/keymaps.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for config/keymaps.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/config/keymaps.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/config/keymaps.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove config/options.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/config/options.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for config/options.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/config/options.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/config/options.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/disabled.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/disabled.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/disabled.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/disabled.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/disabled.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/extras.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/extras.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/extras.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/extras.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/extras.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/lualine.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/lualine.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/lualine.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/lualine.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/lualine.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/telescope.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/telescope.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/telescope.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/telescope.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/telescope.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/copilot.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/copilot.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/copilot.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/copilot.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/copilot.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/cmp.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/cmp.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/cmp.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/cmp.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/cmp.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/oil.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/oil.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/oil.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/oil.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/oil.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs

- name: Remove plugins/avante.lua
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/avante.lua"
    state: absent
  tags:
    - nvim
    - stow_nvim_configs

- name: Create symbolic link for plugins/avante.lua
  become: true
  file:
    src: "{{ lookup('env', 'HOME') }}/dotfiles/lua/plugins/avante.lua"
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/plugins/avante.lua"
    state: link
  tags:
    - nvim
    - stow_nvim_configs
