---
- name: Deletes lazy.vim config file
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim"
    state: absent
  tags: nvim

- name: Deletes lazy.vim share folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/share/nvim/lazy"
    state: absent
  tags: nvim

- name: Deletes lazy.vim state folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/state/nvim/lazy"
    state: absent
  tags: nvim

- name: Deletes nvim cache folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.cache/nvim"
    state: absent
  tags: nvim

- name: Install neovim requirements
  package:
    name:
      - ripgrep
      - fd-find
  tags: nvim

- name: Install more neovim requirements for Ubuntu
  apt:
    name:
      - build-essential
      - libssl-dev
      - ninja-build
      - gettext
      - cmake
      - unzip
      - curl
  tags: nvim
  when: ansible_pkg_mgr == 'apt'

- name: Install more neovim requirements for Fedora
  dnf:
    name:
      - gcc
      - gcc-c++
  tags: nvim
  when: ansible_pkg_mgr == 'dnf'

# - name: Remove keymaps.lua file
#   ansible.builtin.file:
#     path: "{{ lookup('env', 'HOME') }}/.config/nvim/lua/config/keymaps.lua"
#     state: absent
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

# - name: Symlink init.lua
#   ansible.builtin.shell: ln -s $HOME/dotfiles/init.lua $HOME/.config/nvim/init.lua
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

# - name: Symlink after folder
#   ansible.builtin.shell: ln -s $HOME/dotfiles/after $HOME/.config/nvim/after
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

# - name: Symlink lua folder
#   ansible.builtin.shell: ln -s $HOME/dotfiles/lua $HOME/.config/nvim/lua
#   tags: nvim
#   when: ansible_pkg_mgr == 'dnf'

- name: Install neovim package for Fedora
  package:
    name: 
      - neovim
  tags: nvim
  when: ansible_pkg_mgr == 'dnf'

- name: Remove .config/nvim folder
  shell: "rm -rdf {{ lookup('env', 'HOME') }}/.config/nvim"
  tags: nvim

- name: Create .config/nvim folder
  shell: "mkdir -p {{ lookup('env', 'HOME') }}/.config/nvim"
  tags: nvim

- name: Clone neovim from source for Debian-based distro
  ansible.builtin.git:
    repo: 'https://github.com/neovim/neovim'
    dest: "{{ lookup('env', 'HOME') }}/neovim"
    version: stable
  tags:
    - nvim
  when: ansible_pkg_mgr == 'apt'

- name: Build neovim for Debian-based distro
  shell: "cd {{ lookup('env', 'HOME') }}/neovim && make -j 20"
  tags:
    - install
    - nvim
  when: ansible_pkg_mgr == 'apt'

- name: Install neovim for Debian-based distro
  become: true
  shell: "cd {{ lookup('env', 'HOME') }}/neovim && make install"
  tags:
    - install
    - nvim
  when: ansible_pkg_mgr == 'apt'

- name: Git clone LazyVim starter
  ansible.builtin.git:
    repo: 'https://github.com/LazyVim/starter'
    dest: "{{ lookup('env', 'HOME') }}/.config/nvim"
  tags: nvim

- name: Remove LazyVim's .git folder
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config/nvim/.git"
    state: absent
  tags: nvim
